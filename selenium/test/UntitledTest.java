// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class UntitledTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
	   // Browser selector
	   int browser= 0; // 0: firefox, 1: chrome,...
	   boolean headless = false;

	   switch (browser) {
	   case 0:  // firefox
		   // Firefox
		   // Descargar geckodriver de https://github.com/mozilla/geckodriver/releases
		   // Descomprimir el archivo geckodriver.exe en la carpeta drivers
		   System.setProperty("webdriver.gecko.driver",  "drivers/geckodriver.exe");
		   FirefoxOptions firefoxOptions = new FirefoxOptions();
		   if (headless) firefoxOptions.setHeadless(headless);
		   driver = new FirefoxDriver(firefoxOptions);

	   break;
	   case 1: // chrome
		   // Chrome
		   // Descargar Chromedriver de https://chromedriver.chromium.org/downloads
		   // Descomprimir el archivo chromedriver.exe en la carpeta drivers

		   System.setProperty("webdriver.chrome.driver", "drivers/chromedriver.exe");
		   ChromeOptions chromeOptions = new ChromeOptions();
		   if (headless) chromeOptions.setHeadless(headless);
		   chromeOptions.addArguments("window-size=1920,1080");
		   driver = new ChromeDriver(chromeOptions);

		   break;

	   default:
		   	fail("Please select a browser");
		   	break;
	   }
	   js = (JavascriptExecutor) driver;
	   vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void untitled() {
    // Test name: Untitled
    // Step # | name | target | value
    // 1 | open | / | 
	  
    driver.get("https://hmis06.azurewebsites.net/");
    // 2 | setWindowSize | 1256x701 | 
    driver.manage().window().setSize(new Dimension(1256, 701));
    // 3 | click | linkText=Sign up | 
    driver.findElement(By.linkText("Sign up")).click();
    // 4 | waitForElementVisible | xpath=//div[@id='signup']/div/div/p | 3000
    {
      WebDriverWait wait = new WebDriverWait(driver, 3);
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[@id=\'signup\']/div/div/p")));
    }
    // 5 | type | id=email-address | asdasd
    driver.findElement(By.id("email-address")).sendKeys("asdasd");
    // 6 | executeScript | return document.getElementById("email-address").validationMessage | message
    vars.put("message", js.executeScript("return document.getElementById(\"email-address\").validationMessage"));
    // 7 | echo | ${message} | 
    System.out.println(vars.get("message").toString());
    // 8 | assert | message | Please enter an email address.
    vars.put("navigatorLanguage", js.executeScript("return window.navigator.language"));
    System.out.println(vars.get("navigatorLanguage").toString());
    if(vars.get("navigatorLanguage").toString().split("-")[0].equals("en"))
    	assertEquals(vars.get("message").toString(), "Please enter an email address.");
    else if(vars.get("navigatorLanguage").toString().split("-")[0].equals("es")) {
    	System.out.println("Hola bb");
    	assertEquals(vars.get("message").toString(), "Introduzca una direcci√≥n de correo.");
    }
  }
  
  
}
